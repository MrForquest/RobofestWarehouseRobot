include "utils"
import "Mods/Gyro"

BLACK_VALUE = 3
WHITE_VALUE = 24
GRAY_VALUE = (BLACK_VALUE + WHITE_VALUE) / 2

MOTOR_R = "C"
MOTOR_L = "B"
MOVEMENT_MOTORS = MOTOR_R + MOTOR_L
ARDUINO_SENSOR = 1
GYRO_SENSOR = 2
LINE_SENSOR = 3
COLOR_SENSOR = 4
WHEEL_DIAMETER = 6.24

SPEED = 30

KP = 1.3
KI = 0.9

SENSOR_MODE_LIGHT = 0
SENSOR_MODE_ANGLE = 0
SENSOR_MODE_ANGLE_SPEED = 1
SENSOR_MODE_ANGLE_AND_SPEED = 3
SENSOR_MODE_HT_COLOR = 0
SENSOR_MODE_HT_RGB = 5

True = "True"
False = "False"

Motor.Invert(MOTOR_L)
Sensor.SetMode(LINE_SENSOR, SENSOR_MODE_LIGHT)
Sensor.SetMode(GYRO_SENSOR, SENSOR_MODE_ANGLE)
Sensor.SetMode(COLOR_SENSOR, 4)
# 2 4

Motor.Stop(MOVEMENT_MOTORS, False)
Program.Delay(1000)
ResetGyroAndMotors()
Gyro.resetHard(GYRO_SENSOR)
Program.Delay(1000)

arucoID = 44
Sub main
  SPEED = 20
  goDist(3, 0)
  # едем по линии и тем самым центруемся
  goDist(19, 2)
  Motor.Stop(MOVEMENT_MOTORS, True)
  # калибруем гироскоп
  # получаем Aruco id, может здесь зависнуть
  getArucoId(arucoID)
  LCD.Clear()
  LCD.Text(1, 0, 0, 2, arucoID)
  ResetGyroAndMotors()
  # Gyro.resetHard(GYRO_SENSOR)
  Program.Delay(500)
  target_angle = 0
  goDist(16, 1)
  goRotate(90)
  SPEED = 30
  target_angle = 90
  positionColor[0] = -1
  
  sumColors = 14
  
  # считыание цвета кубиков
  For i=1 To 3
    lineValue = Sensor.ReadPercent(LINE_SENSOR)
    While (lineValue > GRAY_VALUE)
      goGyro(SPEED)
      lineValue = Sensor.ReadPercent(LINE_SENSOR)
    EndWhile
    # Motor.Stop(MOVEMENT_MOTORS, True)
    # Program.Delay(300)
    choicedColor = 0
    readColorHsv(COLOR_SENSOR, 0, choicedColor)
    sumColors -= choicedColor
    positionColor[i] = choicedColor
    LCD.Clear()
    LCD.Text(1, 0, 0, 2, choicedColor)
    # Program.Delay(100)
    While (lineValue < GRAY_VALUE)
      goGyro(SPEED)
      lineValue = Sensor.ReadPercent(LINE_SENSOR)
    EndWhile
  EndFor
  positionColor[0] = sumColors
  Motor.Stop(MOVEMENT_MOTORS, True)
  
  # вывод считанных цветов
  LCD.StopUpdate()
  LCD.Clear()
  codeToColor[2] = "Yellow"
  codeToColor[3] = "Green"
  codeToColor[4] = "Blue"
  codeToColor[5] = "Red"
  LCD.Text(1, 0, 0, 2, codeToColor[positionColor[0]])
  LCD.Text(1, 0, 20, 2, codeToColor[positionColor[1]])
  LCD.Text(1, 0, 40, 2, codeToColor[positionColor[2]])
  LCD.Text(1, 0, 60, 2, codeToColor[positionColor[3]])
  LCD.Update()
  LCD.StopUpdate()
  Program.Delay(2000)
  LCD.Clear()
  LCD.Text(1, 0, 0, 2, positionColor[0])
  LCD.Text(1, 0, 20, 2, positionColor[1])
  LCD.Text(1, 0, 40, 2, positionColor[2])
  LCD.Text(1, 0, 60, 2, positionColor[3])
  LCD.Update()
  
  Program.Delay(2000)
  
  # едем к трекам
  goDist(55, 1)
  Motor.Stop(MOVEMENT_MOTORS, True)
  target_angle = target_angle + 90
  tankRotate(target_angle)
  Motor.Stop(MOVEMENT_MOTORS, True)
  
  pr1 = Math.Floor(arucoID / 100) - 1
  pr2 = Math.Floor(arucoID / 10) - ((pr1 + 1) * 10) - 1
  target_angle = 180
  goDist(-20, 1)
  Motor.Stop(MOVEMENT_MOTORS, True)
  Program.Delay(1000)
  
  Sensor.SetMode(LINE_SENSOR, 2)
  Sensor.Wait(LINE_SENSOR)
  
  Motor.ResetCount(MOVEMENT_MOTORS)
  disatnceCm = 76
  angleT = 0
  cmToAngle(disatnceCm, angleT)
  posPr2 = 0
  target_angle = 180
  While (Motor.GetCount("B") < angleT)
    goGyro(SPEED)
    colorLine = Sensor.ReadRawValue(LINE_SENSOR, 0)
    If (colorLine <> 6)  Then
      Motor.Stop(MOVEMENT_MOTORS, True)
      Sensor.SetMode(LINE_SENSOR, 4)
      Sensor.Wait(LINE_SENSOR)
      Program.Delay(100)
      colorLineMy = 0
      readColorHsv(LINE_SENSOR, 0, colorLineMy)
      LCD.Clear()
      LCD.Text(1, 0, 0, 2, colorLineMy)
      
      If colorLineMy = positionColor[pr1] Then
        Speaker.Play(100, "robofest_24/Confirm")
        Motor.Stop(MOVEMENT_MOTORS, True)
        Program.Delay(1000)
        Program.End()
      ElseIf colorLineMy = positionColor[pr2] Then
        posPr2 = Motor.GetCount("B")
      EndIf
      Sensor.SetMode(LINE_SENSOR, 2)
      Sensor.Wait(LINE_SENSOR)
      goDist(3, 1)
      Motor.Stop(MOVEMENT_MOTORS, False)
    EndIf
  EndWhile
  Motor.Stop(MOVEMENT_MOTORS, True)
  LCD.Clear()
  LCD.Text(1, 0, 0, 2, pr2)
  Program.Delay(2000)
  disatnceCm = 0
  angle = 0
  dist = ((angleT - posPr2) / 360) * (Math.Pi * WHEEL_DIAMETER)
  cmToAngle(dist, angle)
  
  goDist(0-dist, 1)
  Motor.Stop(MOVEMENT_MOTORS, True)
  Program.End()
  
  # Program.Delay(10000)
EndSub
saveS1()
# Gyro.resetHard(GYRO_SENSOR)
#Sensor.SetMode(LINE_SENSOR, 4)

# goDist(-40, 1)
# goDist(40, 1)
#saveS1()
# goRotate(90)
#Program
# tankRotate(90)